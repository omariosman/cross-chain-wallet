"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.PasswordOptions = exports.defaultValidator = exports.defaultOptions = void 0;
const _1 = require(".");
const utils_1 = require("../utils");
exports.defaultOptions = {
    /**
     * Recommneded iterations for PBKDF2-HMAC-SHA512
     */
    iterations: 120000,
    keySize: 16
};
/**
 * Default password validator function
 */
exports.defaultValidator = {
    validatorFunc: utils_1.ValidatorUtils.verifyStrongPassword,
    validatorRegex: null
};
/**
 * Options to manage passwords and encryptions.
 */
class PasswordOptions {
    constructor(password) {
        // Store the password in memory within user's session
        // We should not store the raw password in memory, let's hashing the user-given password
        this._password = utils_1.TypeUtils.parseHexToString(_1.CryptoUtils.hash256(_1.EncoderUtils.encodeText(password)));
    }
    /* This is a getter function that returns the password. */
    get password() {
        return this._password;
    }
}
exports.PasswordOptions = PasswordOptions;
