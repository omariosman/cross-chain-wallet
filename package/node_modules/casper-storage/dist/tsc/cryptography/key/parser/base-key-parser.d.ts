import { EncryptionType, IKeyParser } from "../../../cryptography";
import { KeyValue } from ".";
/**
 * Base key-parser, provider features to read and convert keys in specific formats to hex value
 */
export declare abstract class BaseKeyParser implements IKeyParser {
    protected encryptionType: EncryptionType;
    /**
     * Initialize the key-parser with a specific encryption type
     * @param encryptionType
     */
    constructor(encryptionType: EncryptionType);
    /**
     * Convert the given exported PEM as base64 to private-key as a hex byte-array
     * @param content
     * @returns
     */
    convertPEMToPrivateKey(content: string): KeyValue;
    /**
     * Internally convert the PEM format to hex data
     * @param content
     * @returns
     */
    private convertPEMToKey;
    /**
     * Parse the byte-array to private-key as hex data
     * @param data
     */
    protected abstract parsePrivateKey(data: Uint8Array): Uint8Array;
}
