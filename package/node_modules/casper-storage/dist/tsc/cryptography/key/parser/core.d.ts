import { EncryptionType } from "../../../cryptography";
/**
 * Key value to expose the raw key in byte-array data and its encryption type
 */
export declare class KeyValue {
    private _key;
    private _encryptionType;
    /**
     * Initialize the KeyValue with specific raw-key and encryption type
     * @param key
     * @param encryptionType
     */
    constructor(key: Uint8Array, encryptionType: EncryptionType);
    /**
     * Get the current raw-key value
     */
    get key(): Uint8Array;
    /**
     * Get the encryption type of key
     */
    get encryptionType(): EncryptionType;
}
/**
 * Key-parser providers features to read and convert keys in specific formats to hex value
 */
export interface IKeyParser {
    /**
     * Convert the given exported PEM as base64 to private-key as a hex bytearray
     * @param content
     * @returns
     */
    convertPEMToPrivateKey(content: string): KeyValue;
}
