"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Ed25519KeyParser = void 0;
const cryptography_1 = require("../../../cryptography");
const base_key_parser_1 = require("./base-key-parser");
/**
 * Specific implementation of Ed25519 to parse keys
 */
class Ed25519KeyParser extends base_key_parser_1.BaseKeyParser {
    constructor() {
        super(cryptography_1.EncryptionType.Ed25519);
    }
    parsePrivateKey(data) {
        if (data == null) {
            throw new Error("Key data is required");
        }
        return this.parseKey(data, 0, 32);
    }
    parseKey(data, from, to) {
        let key = null;
        const dataLength = data.length;
        if (dataLength === 32) {
            key = data;
        }
        else if (dataLength === 64) {
            key = new Uint8Array(data, from, to);
        }
        else if (dataLength > 32 && dataLength < 64) {
            key = data.slice(dataLength % 32);
        }
        if (key == null || key.length !== 32) {
            throw Error(`Unexpected key data`);
        }
        return key;
    }
}
exports.Ed25519KeyParser = Ed25519KeyParser;
