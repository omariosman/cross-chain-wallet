"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ValidatorUtils = exports.ValidationResult = void 0;
const strongPwdRegex = new RegExp("^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%^&*().])(?=.{10,})");
/**
 * Represents the result of a validation, with a status (true or false) and a message.
 */
class ValidationResult {
    constructor(status, message = null) {
        this.status = status;
        this.message = message;
        if (!this.status && !this.message) {
            throw new Error("Invalid result should have a detail message");
        }
    }
}
exports.ValidationResult = ValidationResult;
/**
 * Provider utilities to validate data
 */
class ValidatorUtils {
    /**
     * Verify a password is a strong one.
     * A strong password is a string which has 10 or more characters, which must contain at least a lowercase, an uppercase, a numeric and a special character.
     * @param pwd password to validate
     * @returns
     */
    static verifyStrongPassword(pwd) {
        if (!pwd) {
            return new ValidationResult(false, "Password is required");
        }
        if (!strongPwdRegex.test(pwd)) {
            return new ValidationResult(false, "Password length must be 10 or longer and it must contain at least a lowercase, an uppercase, a numeric and a special character");
        }
        return new ValidationResult(true);
    }
}
exports.ValidatorUtils = ValidatorUtils;
