import { HDKey } from "./hd-key";
export declare class HDKeyED25519 extends HDKey {
    /**
     * It creates a new HDKeyED25519 object.
     * @param {Uint8Array} privateKey - The private key.
     * @param {Uint8Array} chainCode - The chain code is a 32-byte sequence that is used to derive child keys.
     * @param {Uint8Array} publicKey - The public key of the new HDKey.
     * @returns An HDKeyED25519 object.
     */
    protected createNewHDKey(privateKey: Uint8Array, chainCode: Uint8Array, publicKey: Uint8Array): HDKeyED25519;
    /**
     * Create a new HDKey from the current HDKey and the provided index
     * @param {number} index - The index of the child key to derive.
     * @returns An HDKey object.
     */
    protected deriveChild(index: number): Promise<HDKey>;
    /**
     * It creates a public key from the private key.
     * @returns The public key.
     */
    getPublicKey(): Promise<Uint8Array>;
    /**
     * Following SLIP 0010 - ed only supports harden paths
     * @param index
     * @returns
     */
    getHardenedIndex(index: number): number;
}
