"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.HDKeyManagerSecp256k1 = void 0;
const cryptography_1 = require("../../cryptography");
const hd_key_manager_base_1 = require("./hd-key-manager-base");
const hd_key_secp256k1_1 = require("./hdkey/hd-key-secp256k1");
const core_1 = require("./core");
const MASTER_SECRET = cryptography_1.EncoderUtils.encodeText("Bitcoin seed");
/**
 * A wrapper of HDKey manager which uses ed25519 underlying
 */
class HDKeyManagerSecp256k1 extends hd_key_manager_base_1.HDKeyManagerBase {
    constructor() {
        super(cryptography_1.EncryptionType.Secp256k1);
    }
    GetMasterSecret() {
        return MASTER_SECRET;
    }
    createNewHDKey_Unsafe(privateKey, chainCode, versions) {
        return new hd_key_secp256k1_1.HDKeySecp256k1(new core_1.HDKeyConfig(this.encryptionType, versions, this.GetMasterSecret()), privateKey, chainCode, null);
    }
}
HDKeyManagerSecp256k1.default = new HDKeyManagerSecp256k1();
exports.HDKeyManagerSecp256k1 = HDKeyManagerSecp256k1;
