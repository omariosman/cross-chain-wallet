"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.HDKeyManagerFactory = void 0;
const cryptography_1 = require("../../cryptography");
const hd_key_manager_ed25519_1 = require("./hd-key-manager-ed25519");
const hd_key_manager_secp256k1_1 = require("./hd-key-manager-secp256k1");
/**
 * The factory to provide HDKey manager based on encryption type
 */
class HDKeyManagerFactory {
    /**
     * Returns an instance of HDKey manager based on encryption algo
     * @param encryptionType either Ed25519 or Secp256k1
     * @returns
     */
    static getInstance(encryptionType) {
        switch (encryptionType) {
            case cryptography_1.EncryptionType.Ed25519: return hd_key_manager_ed25519_1.HDKeyManagerEd25519.default;
            case cryptography_1.EncryptionType.Secp256k1: return hd_key_manager_secp256k1_1.HDKeyManagerSecp256k1.default;
            default: throw new Error(`The encryption type ${encryptionType} is not supported`);
        }
    }
}
exports.HDKeyManagerFactory = HDKeyManagerFactory;
